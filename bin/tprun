#!/usr/bin/env python

import argparse
import os
import subprocess
import sys


def set_cuda_visible_devices(devs):
    gpus = []
    for dev in devs.split(','):
        dev = dev.strip().lower()
        if dev == 'cpu':
            continue
        if dev.startswith('gpu'):
            dev = dev[3:]
        if '-' in dev:
            l, r = map(int, dev.split('-'))
            gpus.extend(range(l, r + 1))
        else:
            gpus.append(int(dev))

    # os.environ['CUDA_VISIBLE_DEVICES'] = ','.join([str(gpu) for gpu in gpus])
    return gpus


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('--devices', '-d', type=str, default='*')
    parser.add_argument('cmd', nargs=argparse.REMAINDER)
    args = parser.parse_args()

    env = os.environ.copy()
    gpus = set_cuda_visible_devices(args.devices)
    env['CUDA_VISIBLE_DEVICES'] = ','.join([str(gpu) for gpu in gpus])

    cmd = [sys.executable, '-u'] + args.cmd
    process = subprocess.Popen(cmd, env=env)

    process.wait()
    if process.returncode != 0:
        raise subprocess.CalledProcessError(returncode=process.returncode, cmd=cmd)
